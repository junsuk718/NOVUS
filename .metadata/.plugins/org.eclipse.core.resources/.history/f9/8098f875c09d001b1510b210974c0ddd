#pragma once
/*
 * as5147.h
 *
 *  Created on: Apr 15, 2021
 *      Author: mined
 */

#ifndef INC_AS5147_H_
#define INC_AS5147_H_

#include "spi.h"


#define AS5047P_OPT_ENABLED 		1
#define AS5047P_OPT_DISABLED 		0

#define AS5047P_ACCESS_WRITE 		0
#define AS5047P_ACCESS_READ 		1

#define AS5047P_FRAME_PARD		( 1 << 15)
#define AS5047P_FRAME_EF 		( 1 << 14)
#define AS5047P_FRAME_DATA		0x3FFF

#define AS5047P_ABIRES_100 	100
#define AS5047P_ABIRES_200 	200
#define AS5047P_ABIRES_400 	400
#define AS5047P_ABIRES_800 	800
#define AS5047P_ABIRES_1200 	1200
#define AS5047P_ABIRES_1600 	1600
#define AS5047P_ABIRES_2000 	2000
#define AS5047P_ABIRES_4000 	4000
#define AS5047P_ABIRES_1024 	1024
#define AS5047P_ABIRES_2048 	2048
#define AS5047P_ABIRES_4096 	4096

// --- Volatile registers
#define AS5047P_NOP          	0x0000
#define AS5047P_ERRFL        	0x0001
#define AS5047P_PROG        	0x0003
#define AS5047P_DIAAGC       	0x3FFC
#define AS5047P_MAG          	0x3FFD
#define AS5047P_ANGLEUNC     	0x3FFE
#define AS5047P_ANGLECOM     	0x3FFF

// --- Non-volatile registers
#define AS5047P_ZPOSM        	0x0016
#define AS5047P_ZPOSL        	0x0017
#define AS5047P_SETTINGS1    	0x0018
#define AS5047P_SETTINGS2    	0x0019

// --- Fields in registers
#define AS5047P_ERRFL_PARERR		( 1 << 2)
#define AS5047P_ERRFL_INVCOMM		( 1 << 1)
#define AS5047P_ERRFL_FRERR		( 1 << 0)
#define AS5047P_PROG_PROGVER		( 1 << 6)
#define AS5047P_PROG_PROGOTP		( 1 << 3)
#define AS5047P_PROG_OTPREF		( 1 << 2)
#define AS5047P_PROG_PROGEN		( 1 << 0)
#define AS5047P_DIAAGC_MAGL		( 1 << 11)
#define AS5047P_DIAAGC_MAGH		( 1 << 10)
#define AS5047P_DIAAGC_COF		( 1 << 9)
#define AS5047P_DIAAGC_LF		( 1 << 8)
#define AS5047P_DIAAGC_AGC		( 0x00FF << 0)
#define AS5047P_MAG_CMAG		( 0x3FFF << 0)
#define AS5047P_ANGLEUNC_CORDICANG	( 0x3FFF << 0)
#define AS5047P_ANGLECOM_DAECANG	( 0x3FFF << 0)
#define AS5047P_ZPOSM_ZPOSM		( 0x00FF << 0)
#define AS5047P_ZPOSL_COMP_H_ERR_EN	( 1 << 7)
#define AS5047P_ZPOSL_COMP_I_ERR_EN	( 1 << 6)
#define AS5047P_ZPOSL_ZPOSL		( 0x003F << 0)
#define AS5047P_SETTINGS1_BIT0		( 1 << 0)
#define AS5047P_SETTINGS1_NOISESET	( 1 << 1)
#define AS5047P_SETTINGS1_DIR		( 1 << 2)
#define AS5047P_SETTINGS1_UVW_ABI	( 1 << 3)
#define AS5047P_SETTINGS1_DAECDIS	( 1 << 4)
#define AS5047P_SETTINGS1_ABIBIN	( 1 << 5)
#define AS5047P_SETTINGS1_DATASEL	( 1 << 6)
#define AS5047P_SETTINGS1_PWMON		( 1 << 7)
#define AS5047P_SETTINGS2_UVWPP		( 0x0007 << 0)
#define AS5047P_SETTINGS2_HYS		( 0x0003 << 3)
#define AS5047P_SETTINGS2_ABIRES	( 0x0007 << 5)

typedef struct __attribute__ ((packed)) {
	uint8_t factorySetting:1;
	uint8_t noiseset:1;
	uint8_t dir:1;
	uint8_t uvw_abi:1;
	uint8_t daecdis:1;
	uint8_t abibin:1;
	uint8_t dataselect:1;
	uint8_t pwmon:1;
} Settings1Bit;
typedef union {
    uint8_t raw;
    Settings1Bit values;
} Settings1;

typedef struct __attribute__ ((packed)) {
	uint8_t uvwpp:3;
	uint8_t hys:2;
	uint8_t abires:3;
} Settings2Bit;
typedef union {
    uint8_t raw;
    Settings2Bit values;
} Settings2;

typedef struct __attribute__ ((packed)) {
	uint16_t data:14;
	uint16_t rw:1;
	uint16_t pard:1;
} FrameBit;
typedef union{
	uint16_t raw;
	FrameBit values;
}Frame;

void as5147_Init(SPI_HandleTypeDef* hspix, GPIO_TypeDef* cs_pin_port, uint16_t cs_pin_num);
Frame packFram(uint16_t data);

#endif /* INC_AS5147_H_ */
