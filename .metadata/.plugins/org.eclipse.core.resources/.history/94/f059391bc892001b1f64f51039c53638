/*
 * spi.c
 *
 *  Created on: 2021. 3. 31.
 *      Author: sb030
 */

#include "spi.h"

#define MAX_BUFF 50

GPIO_TypeDef *GPIO;
uint16_t GPIO_Pin;
SPI_HandleTypeDef *hspi;


/** @J.Yeon
  * @brief  Spi통신을 하기위한 초기설정
  * @param  GPIO_X GPIO포트(A..G)
  * @param  GPIO_Pin_Num GPIO통신을 하기위한 핀넘버(0..15)
  * @param  hspi_x SPI_HandleTypeDef 구조에 대한 hspi 포인터
  * @retval void
  */
void SpiSet(GPIO_TypeDef *GPIO_x,uint16_t GPIO_Pin_Num,SPI_HandleTypeDef *hspi_x){

	GPIO = GPIO_x;
	GPIO_Pin = GPIO_Pin_Num;
	hspi = hspi_x;
}

/** @J.Yeon
  * @brief  Spi통신을 통한 데이터 수신
  * @param  address GPIO포트(A..G)
  * @param  len GPIO통신을 하기위한 핀넘버(0..15)
  * @retval pdata Spi통신을 통해 받은 데이터
  */
uint8_t SpiCall(uint8_t address, int len){

	uint8_t pdata[MAX_BUFF];

	//!NOTE :: 필요길이가 MAX_BUFF보다 클때 -> 에러(0출력) @J.Yeon
	if (len>MAX_BUFF)
		return 0;

	HAL_SPI_Writepin(*GPIO, GPIO_Pin, GPIO_PIN_RESET);
	HAL_SPI_Transmit(hspi, &address, 1, 1);
	HAL_SPI_Receive(hspi, pdata, 1, len);
	HAL_SPI_Writepin(*GPIO, GPIO_Pin, GPIO_PIN_SET);

	return pdata;
}
